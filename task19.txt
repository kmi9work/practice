Практика
========
Костенчук М.И.
0.01, 2010.07.05

Задача № 19
-----------

.Исправленная версия условия
====================
Мальчик спортсмен хочет перебраться с одной стороны реки на другую. Он боится замочить ноги, поэтому будет прыгать по камням. Ширина реки n метров. С обеих сторон реки длина берега, доступного для движения мальчика, тоже равна n метров. Мальчик может прыгнуть не более чем на l метров.

Будем считать, что если расположить русло реки горизонтально по отношению к наблюдателю (так чтобы один берег был снизу, а другой сверху), то координаты самой левой доступной для мальчика точки на нижнем берегу (где он стоит изначально) равны (0;0). Тогда самая правая доступная точка верхнего берега имеет координаты (n;n). Про каждый из находящихся в реке камней известны его координаты (x~i~;y~i~). Можно считать, что они образуют двумерный неотсортированный массив. Для однозначности, будем считать все величины n, l, x~i~, y~i~ целыми (но это не значит, что все вычисления в программе будут целыми).

Найти все пути с одного берега на другой.

.Замечание
Пути, содержащие циклы (один и тот же камень больше одного раза) мальчика не интересуют.

.Формат входных данных

Первая строка содержит три целых числа l -- длина прыжка, n -- ширина реки и k -- количество камней. Каждая из последующих k строк содержит по два числа -- координаты камней, разделенные пробелом.

.Пример входных данных:
----------
1 3 5
1 3
1 2
2 3
1 1
0 1
----------
.Формат выходных данных

Набор из p строк, где p — общее количество возможных путей. Каждая строка состоит из m целых чисел, разделенных пробелом. Каждое число в строке означает порядковый номер камня. Нумерация камней начинается с нуля осуществляется в порядке их ввода пользователем. Программа должна печатать «NO», если не существует ни одного пути.

.Пример выходных данных:
----------
4 3 1 0 2
----------

====================

Вопросы
-------



- Является ли совпадение второй координаты и n свидетельством того, что мальчик достиг другого берега? Если да, то зачем в примере он прыгает в конце на точку (2;3)? Или же мальчик должен добраться из (0;0) в (n;n)? Но тогда условие совершенно не правильное.

- Может ли мальчик стартовать с любой точки берега? И как это описывать в выходных данных. Ведь точек берега нет во входных точках.

- Под регулярным выражением имеется в виду что-то похожее на следующее?

[source,ruby]
--------
/(?:1 2 3 4)|(?:1 2 4 3)|(?:1 3 2 4)|...|(?:4 3 2 1)/
--------

- Куда девать готовые регулярные выражения?

- Сколько примерно должно быть тестовых вариантов?




